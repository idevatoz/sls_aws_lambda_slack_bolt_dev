service: slack-echo

frameworkVersion: "3"

plugins:
  - serverless-python-requirements

provider:
  name: aws
  region: us-east-1
  runtime: python3.8
  versionFunctions: false
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ssm:*"
            - "ssm:GetParameter"
            - "ssm:GetParameters"
            - "ssm:GetParametersByPath"
            - "ssm:PutParameter"
            - "ssm:DeleteParameter"
            - "ssm:DeleteParameters"
          Resource:
            - "arn:aws:ssm:us-east-1:394573302243:parameter/SLACK_BOT_TOKEN"
            - "arn:aws:ssm:us-east-1:394573302243:parameter/SLACK_SIGNING_SECRET"


package:
  patterns:
    - "!Backups/**"
    - "!README.md"
    - "!package.json"
    - "!node_modules/**"
    - "!slack_bolt_libs/**"
    - "!package-lock.json"
    - "!slack_bolt_req.txt"
    - "!manual_download.txt"
    - "!download_using_docker.txt"


custom:
  pythonRequirements:
    dockerizePip: true
    fileName: slack_bolt_req.txt
    layer:
      name: slack_bolt
      description: Slack Bolt layer built on the fly using dockerizePip.
      compatibleRuntimes: 
        - python3.8
      compatibleArchitectures: 
        - x86_64


functions:
  echo:
    handler: handler.echo
    layers:
      - Ref: PythonRequirementsLambdaLayer
    events:
      - http: POST /slackcc
